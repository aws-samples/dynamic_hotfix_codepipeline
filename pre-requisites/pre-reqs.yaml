#  Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
#  the License. A copy of the License is located at
#      http://aws.amazon.com/apache2.0/
#  or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
#  CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and
#  limitations under the License.

AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a S3 bucket and KMS key in the region where cloudformation stack is executed.
Parameters:
  BucketStartName:
    Description: Bucket starting name to use for artifacts. It will be suffixed with respective region name.
    Type: String
  ApplicationName:
    Description: An environment name that is prefixed to resources for tracking
    Type: String
    Default: hotfixpoc
  PutPolicy:
    Description: Update S3Bucket policy to include codebuild and codepipeline roles access.
    Type: String
    Default: false
  QAAccount:
    Description: AWS AccountNumber for QA Account
    Type: String
    Default: None    
  StageAccount:
    Description: AWS AccountNumber for Stage Account
    Type: Number
  ProdAccount:
    Description: AWS AccountNumber for Production Account
    Type: Number
  ToolsAccount:
    Description: AWS AccountNumber for Tools Account
    Type: Number 

Conditions:
  UpdatePolicy: !Equals [ !Ref PutPolicy, true ]
  HasQA: !Not [ !Equals [!Ref QAAccount, "None"]]

Resources:
  CodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub ${ApplicationName}-repository
      RepositoryDescription: This is the main repository for storing all codes.

  ECRRepository:
    Type: AWS::ECR::Repository
    Metadata:
       cfn_nag:
        rules_to_suppress:
        - id: W28
          reason: "Resource names are constructed using application name parameter for tracking"        
    Properties:
      RepositoryName: !Sub ${ApplicationName}-app
      ImageScanningConfiguration:
        ScanOnPush: true
      RepositoryPolicyText:
        Version: '2012-10-17'
        Statement:
          -
            Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
               - !Sub "arn:aws:iam::${StageAccount}:root"
               - !Sub "arn:aws:iam::${ProdAccount}:root"
               - !If 
                    - HasQA
                    - !Sub "arn:aws:iam::${QAAccount}:root"
                    - !Ref AWS::NoValue
            Action:
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:PutImage'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:UploadLayerPart'
              - 'ecr:CompleteLayerUpload'

  AccessLogBucket:
      Type: "AWS::S3::Bucket"
      Metadata:
       cfn_nag:
        rules_to_suppress:
        - id: W51
          reason: "Access log bucket to store S3 bucket logs so available for account"
        - id: W35
          reason: "Access log bucket and should not enable access log again on this bucket"  
      Properties:
        AccessControl: LogDeliveryWrite
        OwnershipControls:
          Rules:
          - ObjectOwnership: BucketOwnerPreferred
        BucketEncryption:
          ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
        PublicAccessBlockConfiguration:
         BlockPublicAcls: TRUE
         BlockPublicPolicy: TRUE
         IgnorePublicAcls: TRUE
         RestrictPublicBuckets: TRUE

  ArtifactBucket:
    Type: AWS::S3::Bucket
    #DeletionPolicy: Retain
    Properties:
      BucketName: !Sub '${BucketStartName}-${AWS::Region}'
      PublicAccessBlockConfiguration:
         BlockPublicAcls: TRUE
         BlockPublicPolicy: TRUE
         IgnorePublicAcls: TRUE
         RestrictPublicBuckets: TRUE
      BucketEncryption:   
         ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref AccessLogBucket   

  S3TestBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: UpdatePolicy
    Properties:
      Bucket: !Sub '${BucketStartName}-${AWS::Region}'
      PolicyDocument:
        Statement:
          -
            Action:
                   - s3:Get*
                   - s3:Put*
                   - s3:Delete*
                   - s3:List*
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${BucketStartName}-${AWS::Region}
              - !Sub arn:aws:s3:::${BucketStartName}-${AWS::Region}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${ProdAccount}:role/${ApplicationName}-codepipeline-role
                - !Sub arn:aws:iam::${StageAccount}:role/${ApplicationName}-codepipeline-role
                - !If 
                    - HasQA
                    - !Sub arn:aws:iam::${QAAccount}:role/${ApplicationName}-codepipeline-role
                    - !Ref AWS::NoValue  

  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by Assumed Roles in Test accounts to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          -
            Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
              - "kms:ReplicateKey"
            Resource: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
          -
            Sid: Allow use of the key for code service IAM roles
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${StageAccount}:root
                - !Sub arn:aws:iam::${ProdAccount}:root
                - !Sub arn:aws:iam::${ToolsAccount}:root
                - !If 
                    - HasQA
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
            Resource: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
          -
            Sid: Allows Cloudwatch Log group to encrypt using the key
            Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
            Resource: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*" 
            
  SSMMKmsKeyId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /parameter/kms/cmk/id
      Type: String
      Value: !Ref KMSKey
      Description: "SSM Parameter to store KmsKey Id"

  SSMKmsKeyARN:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /parameter/kms/cmk/arn
      Type: String
      Value: !GetAtt KMSKey.Arn
      Description: "SSM Parameter to store KmsKey Arn"

  SSMArtifactBucketName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /parameter/s3/artifactbucket/name
      Type: String
      Value: !Ref ArtifactBucket
      Description: "Artifact Bucket Name"

  SSMCodecommitRepositoryName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /parameter/codecommit/repository/name
      Type: String
      Value: !Sub ${ApplicationName}-repository

  SSMECRName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /parameter/ecr/repository/name
      Type: String
      Value: !Sub ${ApplicationName}-ecr

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName:  alias/codepipeline-kms
      TargetKeyId: !Ref KMSKey

  ProdAccountSSM:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /parameter/prodaccount
        Type: String
        Value: !Ref ProdAccount

  StageAccountSSM:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /parameter/stageaccount
        Type: String
        Value: !Ref StageAccount

  ToolsAccountSSM:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /parameter/toolsaccount
        Type: String
        Value: !Ref ToolsAccount

Outputs:
  ArtifactBucket:
    Value: !Ref ArtifactBucket
  KMSKey:
    Value: !Ref KMSKey